<?xml version="1.0" encoding="utf-8"?>
<resources>

    <!-- PLA_ListView -->
    <attr name="absListViewStyle" format="reference"/>
    <attr name="listViewStyle" format="reference"/>

    <declare-styleable name="PLAMultiColumnListView">
        <attr name="plaColumnNumber" format="integer"/>
        <attr name="plaLandscapeColumnNumber" format="integer"/>
        <attr name="plaColumnPaddingLeft" format="dimension"/>
        <attr name="plaColumnPaddingRight" format="dimension"/>
    </declare-styleable>

    <declare-styleable name="AbsListView">

        <!-- Drawable used to indicate the currently selected item in the list. -->
        <attr name="listSelector" format="color|reference"/>
        <!--
             When set to true, the selector will be drawn over the selected item.
             Otherwise the selector is drawn behind the selected item. The default
             value is false.
        -->
        <attr name="drawSelectorOnTop" format="boolean"/>
        <!-- Used by ListView and GridView to stack their content from the bottom. -->
        <attr name="stackFromBottom" format="boolean"/>
        <!--
             When set to true, the list uses a drawing cache during scrolling.
             This makes the rendering faster but uses more memory. The default
             value is true.
        -->
        <attr name="scrollingCache" format="boolean"/>
        <!--
             When set to true, the list will filter results as the user types. The
             List's adapter must support the Filterable interface for this to work.
        -->
        <attr name="textFilterEnabled" format="boolean"/>
        <!--
             Sets the transcript mode for the list. In transcript mode, the list
             scrolls to the bottom to make new items visible when they are added.
        -->
        <attr name="transcriptMode">

            <!-- Disables transcript mode. This is the default value. -->
            <enum name="disabled" value="0"/>
            <!--
                 The list will automatically scroll to the bottom when
                 a data set change notification is received and only if the last item is
                 already visible on screen.
            -->
            <enum name="normal" value="1"/>
            <!--
                 The list will automatically scroll to the bottom, no matter what items
                 are currently visible.
            -->
            <enum name="alwaysScroll" value="2"/>
        </attr>
        <!--
             Indicates that this list will always be drawn on top of solid, single-color
             opaque background. This allows the list to optimize drawing.
        -->
        <attr name="cacheColorHint" format="color"/>
        <!--
             Enables the fast scroll thumb that can be dragged to quickly scroll through
             the list.
        -->
        <attr name="fastScrollEnabled" format="boolean"/>
        <!--
             When set to true, the list will use a more refined calculation
             method based on the pixels height of the items visible on screen. This
             property is set to true by default but should be set to false if your adapter
             will display items of varying heights. When this property is set to true and
             your adapter displays items of varying heights, the scrollbar thumb will
             change size as the user scrolls through the list. When set to fale, the list
             will use only the number of items in the adapter and the number of items visible
             on screen to determine the scrollbar's properties.
        -->
        <attr name="smoothScrollbar" format="boolean"/>
        <!--
             Defines the choice behavior for the view. By default, lists do not have
             any choice behavior. By setting the choiceMode to singleChoice, the list
             allows up to one item to be in a chosen state. By setting the choiceMode to
             multipleChoice, the list allows any number of items to be chosen.
             Finally, by setting the choiceMode to multipleChoiceModal the list allows
             any number of items to be chosen in a special selection mode.
             The application will supply a
             {@link android.widget.AbsListView.MultiChoiceModeListener} using
             {@link android.widget.AbsListView#setMultiChoiceModeListener} to control the
             selection mode. This uses the {@link android.view.ActionMode} API.
        -->
        <attr name="choiceMode">

            <!-- Normal list that does not indicate choices. -->
            <enum name="none" value="0"/>
            <!-- The list allows up to one choice. -->
            <enum name="singleChoice" value="1"/>
            <!-- The list allows multiple choices. -->
            <enum name="multipleChoice" value="2"/>
            <!-- The list allows multiple choices in a custom selection mode. -->
            <enum name="multipleChoiceModal" value="3"/>
        </attr>

        <!--
             When set to true, the list will always show the fast scroll interface.
             This setting implies fastScrollEnabled.
        -->
        <attr name="fastScrollAlwaysVisible" format="boolean"/>
    </declare-styleable>
    <declare-styleable name="ListView">

        <!-- Drawable or color to draw between list items. -->
        <!-- <attr name="divider" format="reference|color" /> -->
        <!--
             Height of the divider. Will use the intrinsic height of the divider if this
             is not specified.
        -->
        <attr name="dividerHeight" format="dimension"/>
        <!--
             When set to false, the ListView will not draw the divider after each header view.
             The default value is true.
        -->
        <attr name="headerDividersEnabled" format="boolean"/>
        <!--
             When set to false, the ListView will not draw the divider before each footer view.
             The default value is true.
        -->
        <attr name="footerDividersEnabled" format="boolean"/>
        <!-- Drawable to draw above list content. -->
        <attr name="overScrollHeader" format="reference|color"/>
        <!-- Drawable to draw below list content. -->

        <attr name="overScrollFooter" format="reference|color"/>

        <attr name="plaContentBackground" format="color"/>
    </declare-styleable>

    <!-- CircularProgressBar -->
    <declare-styleable name="CircularProgressBar">
        <attr name="cpbStyle" format="reference"/>
        <attr name="cpb_color" format="color"/>
        <attr name="cpb_colors" format="reference"/>
        <attr name="cpb_stroke_width" format="dimension"/>
        <attr name="cpb_min_sweep_angle" format="integer"/>
        <attr name="cpb_max_sweep_angle" format="integer"/>
        <attr name="cpb_sweep_speed" format="float"/>
        <attr name="cpb_rotation_speed" format="float"/>
    </declare-styleable>

    <!--    recyclerView refresh layout-->
    <declare-styleable name="MoocStyleRefreshView">
        <attr name="mv_ultimateColor" format="reference|color"/>
        <attr name="mv_originalImg" format="reference"/>
    </declare-styleable>

    <!--circleProgress-->
    <declare-styleable name="CircleProgressBar">
        <attr name="min" format="integer"/>
        <attr name="max" format="integer"/>
        <attr name="progress_" format="integer"/>
        <attr name="progressbarColor" format="color"/>
        <attr name="isTranslucencyBg" format="boolean"/>
        <attr name="progressBarThickness" format="dimension"/>
    </declare-styleable>
    <!-- ProgressWheel -->
    <declare-styleable name="ProgressWheel">
        <attr name="progressIndeterminate" format="boolean" />
        <attr name="barColor" format="color" />
        <attr name="rimColor" format="color" />
        <attr name="rimWidth" format="dimension" />
        <attr name="spinSpeed" format="float" />
        <attr name="barSpinCycleTime" format="integer" />
        <attr name="circleRadius" format="dimension" />
        <attr name="fillRadius" format="boolean" />
        <attr name="barWidth" format="dimension" />
        <attr name="linearProgress" format="boolean" />
    </declare-styleable>
    <!-- SwipeBackLayout -->
    <declare-styleable name="SwipeBackLayout">
        <attr name="edge_size" format="dimension"/>
        <attr name="edge_flag">
            <enum name="left" value="0"/>
            <enum name="right" value="1"/>
            <enum name="bottom" value="2"/>
            <enum name="all" value="3"/>
        </attr>
        <attr name="shadow_left" format="reference"/>
        <attr name="shadow_right" format="reference"/>
        <attr name="shadow_bottom" format="reference"/>
    </declare-styleable>

    <attr name="SwipeBackLayoutStyle" format="reference"/>

    <!--SwitchView-->
    <declare-styleable name="SwitchView">
        <attr name="tintColor" format="reference|color"/>
        <attr name="outerStrokeWidth" format="reference|dimension"/>
        <attr name="shadowSpace" format="reference|dimension"/>
    </declare-styleable>

    <!--PagerSlidingTabStrip-->
    <declare-styleable name="PagerSlidingTabStrip">
        <attr name="pstsIndicatorColor" format="color"/>
        <attr name="pstsIndicatorHeight" format="dimension"/>
        <attr name="pstsUnderlineColor" format="color"/>
        <attr name="pstsUnderlineHeight" format="dimension"/>
        <attr name="pstsDividerColor" format="color"/>
        <attr name="pstsDividerWidth" format="dimension"/>
        <attr name="pstsIndicatorLeftPadding" format="dimension"/>
        <attr name="pstsDividerPadding" format="dimension"/>
        <attr name="pstsScrollOffset" format="dimension"/>
        <attr name="pstsShouldExpand" format="boolean"/>
        <attr name="pstsPaddingMiddle" format="boolean"/>
        <attr name="pstsTabPaddingLeftRight" format="dimension"/>
        <attr name="pstsTabBackground" format="reference"/>
        <attr name="pstsTabTextSize" format="dimension"/>
        <attr name="pstsTabTextColor" format="reference"/>
        <attr name="pstsTabTextPressColor" format="reference"/>
        <attr name="pstsTabTextSelectColor" format="reference"/>
        <attr name="pstsTabTextDefaultColor" format="reference"/>
        <attr name="pstsTabTextStyle" format="reference">
            <flag name="normal" value="0x0"/>
            <flag name="bold" value="0x1"/>
            <flag name="italic" value="0x2"/>
        </attr>
        <attr name="pstsTabTextAllCaps" format="boolean"/>
        <attr name="pstsTabTextAlpha" format="integer"/>
        <attr name="pstsTabTextFontFamily" format="string"/>
    </declare-styleable>

    <!--SegmentedGroup-->
    <declare-styleable name="SegmentedGroup">
        <attr name="sg_corner_radius" format="dimension"/>
        <attr name="sg_border_width" format="dimension"/>
        <attr name="sg_tint_color" format="color"/>
        <attr name="sg_checked_text_color" format="color"/>
        <attr name="sg_pressed_text_color" format="color"/>
    </declare-styleable>

    <!--CircleImageView-->
    <declare-styleable name="CircleImageView">
        <attr name="border_width" format="dimension"/>
        <attr name="border_color" format="color"/>
        <attr name="border_overlay" format="boolean"/>
    </declare-styleable>

    <!--SwipeItemLayout-->
    <declare-styleable name="SwipeItemLayout">
        <attr name="bga_sil_swipeDirection" format="enum">
            <enum name="left" value="0"/>
            <enum name="right" value="1"/>
        </attr>
        <attr name="bga_sil_bottomMode" format="enum">
            <enum name="pullOut" value="0"/>
            <enum name="layDown" value="1"/>
        </attr>
        <attr name="bga_sil_springDistance" format="dimension"/>
    </declare-styleable>

    <!--BGABadgeView-->
    <declare-styleable name="BGABadgeView">
        <!-- 徽章背景色 -->
        <attr name="badge_bgColor" format="reference|color"/>
        <!-- 徽章文本的颜色 -->
        <attr name="badge_textColor" format="reference|color"/>
        <!-- 徽章文本字体大小 -->
        <attr name="badge_textSize" format="reference|dimension"/>
        <!-- 徽章背景与宿主控件上下边缘间距离 -->
        <attr name="badge_verticalMargin" format="reference|dimension"/>
        <!-- 徽章背景与宿主控件左右边缘间距离 -->
        <attr name="badge_horizontalMargin" format="reference|dimension"/>
        <!-- 徽章文本边缘与徽章背景边缘间的距离 -->
        <attr name="badge_padding" format="reference|dimension"/>
        <!-- 徽章在宿主控件中的位置 -->
        <attr name="badge_gravity" format="enum">
            <enum name="rightTop" value="0"/>
            <enum name="rightCenter" value="1"/>
            <enum name="rightBottom" value="2"/>
        </attr>
        <!-- 是否可以拖拽删除徽章 -->
        <attr name="badge_dragable" format="boolean"/>
    </declare-styleable>

    <!--materialEditText-->
    <declare-styleable name="MaterialEditText">
        <!-- The base color of the line and the texts. Default is black. -->
        <attr name="met_baseColor" format="color"/>
        <!-- The highlight color of the line, and the floating label if the highlightFloatingLabel is true. -->
        <attr name="met_primaryColor" format="color"/>
        <!-- How the floating label should be shown. Default is none -->
        <attr name="met_floatingLabel">
            <enum name="none" value="0"/>
            <enum name="normal" value="1"/>
            <enum name="highlight" value="2"/>
        </attr>
        <!-- The color for when something is wrong.(e.g. exceeding max characters) -->
        <attr name="met_errorColor" format="color"/>
        <!-- Min characters count limit. 0 means no limit. -->
        <attr name="met_minCharacters" format="integer"/>
        <!-- max Characters count limit. 0 means no limit. -->
        <attr name="met_maxCharacters" format="integer"/>
        <!-- Whether to show the bottom ellipsis in singleLine mode -->
        <attr name="met_singleLineEllipsis" format="boolean"/>
        <!-- Reserved bottom text lines count, no matter if there is some helper/error text. -->
        <attr name="met_minBottomTextLines" format="integer"/>
        <!-- Helper text at the bottom -->
        <attr name="met_helperText" format="string"/>
        <!-- Helper text color -->
        <attr name="met_helperTextColor" format="color"/>
        <!-- Font of the paint used to draw accent texts -->
        <attr name="met_accentTypeface" format="string"/>
        <!-- Font used on view -->
        <attr name="met_typeface" format="string"/>
        <!-- Custom float label text -->
        <attr name="met_floatingLabelText" format="string"/>
        <!-- spacing between the main text and the floating label -->
        <attr name="met_floatingLabelPadding" format="dimension"/>
        <!-- Hide underline -->
        <attr name="met_hideUnderline" format="boolean"/>
        <!-- Underline's color -->
        <attr name="met_underlineColor" format="color"/>
        <!-- Auto validate -->
        <attr name="met_autoValidate" format="boolean"/>
        <!-- Left icon -->
        <attr name="met_iconLeft" format="reference"/>
        <!-- Right icon -->
        <attr name="met_iconRight" format="reference"/>
        <!-- Padding between icon(s) and the main area. 8dp by default. -->
        <attr name="met_iconPadding" format="dimension"/>
        <!-- Clear button -->
        <attr name="met_clearButton" format="boolean"/>
        <!-- The floating label's text size. 12sp by default. -->
        <attr name="met_floatingLabelTextSize" format="dimension"/>
        <!-- The floating label's text color. -1 by default. -->
        <attr name="met_floatingLabelTextColor" format="color"/>
        <!-- The bottom texts' size. 12sp by default. -->
        <attr name="met_bottomTextSize" format="dimension"/>
        <!-- Always show the floating label, instead of animating it in/out. False by default. -->
        <attr name="met_floatingLabelAlwaysShown" format="boolean"/>
        <!-- Always show the helper text, no matter if the edit text is focused. False by default. -->
        <attr name="met_helperTextAlwaysShown" format="boolean"/>
        <!-- Whether use animation to show/hide the floating label. True by default. -->
        <attr name="met_floatingLabelAnimating" format="boolean"/>
        <!-- Text color -->
        <attr name="met_textColor" format="color"/>
        <!-- Hint Text Color -->
        <attr name="met_textColorHint" format="color"/>
        <!-- Auto validate on focus lost. False by default. -->
        <attr name="met_validateOnFocusLost" format="boolean"/>
        <!-- Whether check the characters count at the beginning it's shown. True by default. -->
        <attr name="met_checkCharactersCountAtBeginning" format="boolean"/>

    </declare-styleable>

    <!--    tag group-->
    <declare-styleable name="TagGroup">
        <!-- Whether add empty input item. -->
        <attr name="atg_isAddInputItem" format="boolean"/>
        <!-- Whether the tag group is in append mode. -->
        <attr name="atg_isAppendMode" format="boolean"/>
        <!-- If the tag group is in append mode, what the hint of input tag. -->
        <attr name="atg_inputHint" format="string"/>

        <!-- The tag view outline border color. -->
        <attr name="atg_borderColor" format="color"/>
        <!-- The tag view text color. -->
        <attr name="atg_textColor" format="color"/>
        <!-- The tag view background color. -->
        <attr name="atg_backgroundColor" format="color"/>

        <!-- The dash outline border color, when in append mode. -->
        <attr name="atg_dashBorderColor" format="color"/>
        <!-- The input tag hint text color, when in append mode. -->
        <attr name="atg_inputHintColor" format="color"/>
        <!-- The input tag type text color, when in append mode. -->
        <attr name="atg_inputTextColor" format="color"/>

        <!-- The checked tag view outline border color. -->
        <attr name="atg_checkedBorderColor" format="color"/>
        <!-- The checked text color. -->
        <attr name="atg_checkedTextColor" format="color"/>
        <!-- The checked marker color. -->
        <attr name="atg_checkedMarkerColor" format="color"/>
        <!-- The checked tag view background color. -->
        <attr name="atg_checkedBackgroundColor" format="color"/>

        <!-- The tag view background color, when the tag view is being pressed. -->
        <attr name="atg_pressedBackgroundColor" format="color"/>

        <!-- The tag view outline border stroke width. -->
        <attr name="atg_borderStrokeWidth" format="dimension"/>
        <!-- The tag view text size. -->
        <attr name="atg_textSize" format="dimension"/>

        <attr name="atg_horizontalSpacing" format="dimension"/>
        <attr name="atg_verticalSpacing" format="dimension"/>
        <attr name="atg_horizontalPadding" format="dimension"/>
        <attr name="atg_verticalPadding" format="dimension"/>
    </declare-styleable>

    <declare-styleable name="Themes">
        <attr name="tagGroupStyle" format="reference"/>
    </declare-styleable>

</resources>